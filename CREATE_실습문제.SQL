/*
	** 실습문제 **
	도서관리 프로그램을 만들기 위한 테이블들 만들기
	
	이때, 제약조건에 이름을 부여할 것
		각 컬럼에 주석달기
*/
--초기화 작업 : 기본 테이블 제거
drop table TB_MEMBER;
drop table TB_BOOK;
drop table TB_PUBLISHER;
drop table TB_RENT;
/*
    1. 출판사들에 대한 데이터를 담기위한 출판사 테이블(TB_PUBLISHER)
    컬럼 : PUB_NO(출판사 번호) - 기본키(PUBLISHER_PK)
          PUB_NAME(출판사명) -- NOT NULL(PUBLISHER_NN)
          PHONE(출판사전화번호) -- 제약조건없음
*/


--샘플 3개정도 생성
create table TB_PUBLISHER(
PUB_NO number constraint PUBLISHER_PK primary key,
PUB_NAME varchar(30) constraint PUBLISHER_NN NOT NULL,
PHONE varchar(13)
);

COMMENT ON COLUMN TB_PUBLISHER.PUB_NO IS '출판사 번호';
COMMENT ON COLUMN TB_PUBLISHER.PUB_NAME IS '출판사명';
COMMENT ON COLUMN TB_PUBLISHER.PHONE IS '출판사 전화번호';

INSERT INTO TB_PUBLISHER VALUES (1, '민음사', '070-1234-5678');
INSERT INTO TB_PUBLISHER VALUES (2, '문학동네', '070-9090-1234');
INSERT INTO TB_PUBLISHER VALUES (3, '동아', '02-9090-3939');

select * from TB_PUBLISHER;

/*
    2. 도서들에 대한 데이터를 담기위한 도서 테이블(TB_BOOK)
    컬럼 : BK_NO(도서번호)--기본키(BOOK_PK)
          BK_TITLE(도서명)--NOT NULL(BOOK__NN_TITLE)
          BK_AUTHOR(저자명)--NOT NULL(BOOK__NN_AUTHOR)
          BK_PRICE(가격)-- 제약조건없음
          BK_PUB_NO(출판사 번호)--외래키(BOOK_FK)(TB_PUBLISHER테이블을 참조)
                                이때 참조하고 있는 부모데이터 삭제시 자식데이터도 삭제 되도록 옵션지정
                                
*/


--5개 정도의 샘플 데이터 추가하기
create table TB_BOOK(
BK_NO number constraint BOOK_PK primary key,
BK_TITLE varchar(30) constraint BOOK__NN_TITLE NOT NULL,
BK_AUTHOR varchar(20) constraint BOOK__NN_AUTHOR NOT NULL,
BK_PRICE number,
BK_PUB_NO number constraint BOOK_FK REFERENCES TB_PUBLISHER on delete cascade

--,CONSTRAINT BOOK_FK FOREIGN (BK_PUB_NO) REFERENCES TB_PUBLISHER on delete cascade -- 외래키 테이블 방식  

);
--각 컬럼에 설명 추가
COMMENT ON COLUMN TB_BOOK.BK_NO IS '도서번호';
COMMENT ON COLUMN TB_BOOK.BK_TITLE IS '도서명';
COMMENT ON COLUMN TB_BOOK.BK_AUTHOR IS '저자명';
COMMENT ON COLUMN TB_BOOK.BK_PRICE IS '도서가격';
COMMENT ON COLUMN TB_BOOK.BK_PUB_NO IS '출판사번호';

INSERT INTO TB_BOOK VALUES (100, '공덕아 이닦아줄게', '이상교', 12600, 3);
INSERT INTO TB_BOOK VALUES (101, '오만과 편견', '제인 오스틴', 9900, 1);
INSERT INTO TB_BOOK VALUES (102, '노인과 바다', '헤밍웨이', 20000, 2);
INSERT INTO TB_BOOK VALUES (103, '다빈치코드', '댄 브라운', 50000, 2);
INSERT INTO TB_BOOK VALUES (104, '인페르노', '댄 브라운', 15000, 2);
--INSERT INTO TB_BOOK VALUES (105, '인페르노', '댄 브라운', 15000, 5);

--> 외래키에 해당하는 출판사 번호를 없는 값으로 추가하려고 해서 오류 발생
select * from TB_BOOK JOIN tb_publisher ON (bk_PUB_no = PUB_NO);

/*
    3. 회원에 대한 데이터를 담기위한 회원 테이블(TB_MEMBER)
    컬럼명 : MEMBER_NO(회원번호) -- 기본키(MEMBER_PK)
            MEMBER_ID(아이디) -- 중복금지(MEMBER_UQ_ID)
            MEMBER_PWD(비밀번호) -- NOT NULL(MEMBER_NN_PWD)
            MEMBER_NAME(회원명) -- NOT NULL(MEMBER_NN_NAME)
            GENDER(성별) -- M또는 F로 입력되도록 제한(MEMBER_CK_GEN)
            ADDRESS(주소) -- 제약조건없음
            PHONE(연락처)-- 제약조건없음
            STATUS(탈퇴여부) -- 기본값을 N으로 지정, -그리고 N또는 Y만 입력되도록 제약조건 설정(MEMBER_CK_STA)
            ENROLL_DATE(가입일) -- 기본값으로 SYSDATE, NOT NULL 제약조건(MEMBER_NN_EN)
*/


--5개 정도의 샘플 데이터 추가하기
create table TB_MEMBER(
MEMBER_NO NUMBER CONSTRAINT MEMBER_PK PRIMARY KEY,
MEMBER_ID VARCHAR2(15) CONSTRAINT MEMBER_UQ_ID UNIQUE,
MEMBER_PWD VARCHAR2(15) CONSTRAINT MEMBER_NN_PWD NOT NULL,
MEMBER_NAME VARCHAR2(30) CONSTRAINT MEMBER_NN_NAME NOT NULL,
GENDER CHAR(1) CONSTRAINT MEMBER_CK_GEN CHECK(GENDER IN ('M', 'F')),
ADDRESS VARCHAR2(100),
PHONE VARCHAR2(13),
STATUS CHAR(1) DEFAULT 'N' CONSTRAINT MEMBER_CK_STA CHECK(STATUS IN ('N', 'Y')),
ENROLL_DATE DATE DEFAULT SYSDATE CONSTRAINT MEMBER_NN_EN NOT NULL
);

INSERT INTO TB_MEMBER VALUES(1, 'USER01', 'PASS01', '아이유', 'F', NULL, NULL, DEFAULT, DEFAULT);
--기본값으로 데이터를 추가하고자 할때 DEFAULT 사용
INSERT INTO TB_MEMBER VALUES(2, 'USER02', 'PASS01', '아일유', 'F', NULL, NULL, DEFAULT, DEFAULT);
INSERT INTO TB_MEMBER VALUES(3, 'USER03', 'PASS01', '아삼유', 'F', NULL, NULL, DEFAULT, DEFAULT);
INSERT INTO TB_MEMBER VALUES(4, 'USER04', 'PASS01', '아사유', 'F', NULL, NULL, DEFAULT, DEFAULT);
INSERT INTO TB_MEMBER VALUES(5, 'USER05', 'PASS01', '아오유', 'F', NULL, NULL, DEFAULT, DEFAULT);

SELECT* FROM TB_MEMBER;
/*
    4.어떤 회원이 어떤 도서를 대여했는지에 대한 대여목록 테이블(TB_RENT)
    컬럼명 : RENT_NO(대여번호)-- 기본키(RENT_PK)
            RENT_MEM_NO(대여회원번호)-- 외래키(RENT_FK_MEM) TB_MEMBER와 참조하도록
                                        이때 부모 데이터 삭제시 자식데이터 값이 NULL이 되도록 지정
            RENT_BOOK_NO(대여도서번호)-- 외래키(RENT_FK_BOOK) TB_BOOK와 참조하도록
                                        이때 부모 데이터 삭제시 자식데이터 값이 NULL이 되도록 지정
            RENT_DATE(대여일) -- 기본값 SYSDATE
*/
create table TB_RENT(
RENT_NO NUMBER CONSTRAINT RENT_PK PRIMARY KEY,
RENT_MEM_NO NUMBER,
RENT_BOOK_NO NUMBER,
RENT_DATE DATE DEFAULT SYSDATE,

CONSTRAINT RENT_FK_MEM FOREIGN KEY (RENT_MEM_NO) REFERENCES TB_MEMBER ON DELETE SET NULL,
CONSTRAINT RENT_FK_BOOK FOREIGN KEY (RENT_BOOK_NO) REFERENCES TB_BOOK ON DELETE SET NULL
);

--외래키 설정 시 참조 테이블의 컬럼을 생략할 수 있음 --> 해당 테이블의 기본키와 연결됨



--3개 정도의 샘플 데이터 추가하기
INSERT INTO TB_RENT VALUES (1000, 3, 102, DEFAULT);
INSERT INTO TB_RENT VALUES (1001, 2, 102, DEFAULT);
INSERT INTO TB_RENT VALUES (1002, 4, 102, DEFAULT);

SELECT * FROM TB_RENT;
--대여번호, 회원명, 도서명, 대여명 조회
SELECT RENT_NO, MEMBER_NAME, BK_TITLE, RENT_DATE 
 FROM TB_RENT
   JOIN TB_MEMBER ON(RENT_MEM_NO = MEMBER_NO)
   JOIN TB_BOOK ON (RENT_BOOK_NO = BK_NO);
